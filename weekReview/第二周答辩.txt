本周主要学习了如何拆分react程序以及redux的使用
拆分:
为了降低耦合度，达到自治（高内聚低耦合）的效果、使模块能够复用
按照组件化的思想把程序拆成多个组件,

redux:不需要繁杂的回调函数
store:包含state和dispatch,存储数据
action:用户发出的请求,包含type字段和其它负载
dispatch:运送action
reducer:根据现在的state和action进行处理,返回新的state
combinereducer:拆分reducer
connect:将store中的state绑定给组件
mapstateToprops：接收state返回一个对象,它能更新store
bindActionCreators：不使用dispatch传递action
流程：
mapStateToProps自动执行,return初始化的state,渲染初始视图
用户先发出action请求,dispatch传递action,store自动调用reducer,
reducer获取当前的state和传入的action处理后返回新的state,
mapStateToProps自动执行,页面重新渲染，得到新的视图。
